version: "3"
networks:
  grafananet:
services:
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - /var/log:/var/log
      - ./shared/loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - grafananet
  # loki:
  #   image: grafana/loki:2.8.0
  #   ports:
  #     - "3100:3100"
  #   command: [ "-config.file=/mnt/config/loki/loki-config.yaml" ]
  #   volumes:
  #     - /var/log:/var/log
  #     - ./loki-config.yaml:/mnt/config/loki/loki-config.yaml
  #   networks:
  #     - grafananet

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - ./shared/promtail-config.yaml:/mnt/config/promtail-config.yaml
    command: [ "-config.file=/mnt/config/promtail-config.yaml" ]
    networks:
      - grafananet

  tempo:
    image: grafana/tempo:latest
    command: 
      - "-config.file=/etc/tempo.yaml"
      # - "-storage.trace.backend=local"                  # tell tempo where to permanently put traces
      # - "-storage.trace.local.path=/tmp/tempo/traces"
      # - "-storage.trace.wal.path=/tmp/tempo/wal"        # tell tempo where to store the wal
      - "-auth.enabled=false"                           # disables the requirement for the X-Scope-OrgID header
      - "-server.http-listen-port=3200"
    volumes:
      - ./shared/tempo.yaml:/etc/tempo.yaml
      - ./local/tempo-data:/tmp/tempo
      
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    networks:
      - grafananet

  # k6-tracing:
  #   image: ghcr.io/grafana/xk6-client-tracing:v0.0.2
  #   environment:
  #     - ENDPOINT=tempo:4317
  #   restart: always
  #   depends_on:
  #     - tempo
  #   networks:
  #     - grafananet

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./shared/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - grafananet

  grafana:
    image: grafana/grafana:9.2.2
    volumes:
      - ./shared/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./local/grafana-data:/var/lib/grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3199:3000"
    networks:
      - grafananet

  grafana-agent:
    image: grafana/agent:main
    # image: grafana/agent:v0.36.2
    ports:
      - "8888:8888"
      - "12345:12345"
      - "12346:12346"
    volumes:
      - ./local/data:/etc/agent/data
      - ./shared/agent.yaml:/etc/agent-config/agent.yaml
    entrypoint:
      # - --config.file=/etc/agent/agent.yaml
      # - --enable-features=integrations-next
      - /bin/grafana-agent
      - -server.http.address=0.0.0.0:12345
      - -config.file=/etc/agent-config/agent.yaml
      - -metrics.wal-directory=/tmp/agent/wal
      - -enable-features=integrations-next
      - -config.expand-env
      - -config.enable-read-api
    environment:
      HOSTNAME: agent
      LOKI_HOST: loki:3100
      TEMPO_HOST: tempo:4317
      REMOTE_WRITE_HOST: prometheus:9090
    networks:
      - grafananet

  # APP DEMO FE
  next-app:
    container_name: nextjs-faro
    build:
      context: nextjs-faro
      dockerfile: Dockerfile
      args:
        ENV_VARIABLE: ${ENV_VARIABLE}
        NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
    restart: always
    ports:
      - 3700:3000
    networks:
        - grafananet
  
  # agent:
  #   profiles: [agent]
  #   image: grafana/agent:latest
  #   volumes:
  #     - ./agent/config:/etc/agent-config
  #   entrypoint:
  #     - /bin/grafana-agent
  #     - -server.http.address=0.0.0.0:12345
  #     - -config.file=/etc/agent-config/agent.yaml
  #     - -metrics.wal-directory=/tmp/agent/wal
  #     - -enable-features=integrations-next
  #     - -config.expand-env
  #     - -config.enable-read-api
  #   environment:
  #     HOSTNAME: agent
  #     REMOTE_WRITE_HOST: mimir:9009
  #     LOKI_HOST: loki:3100
  #     TEMPO_HOST: tempo:4317
  #     AVALANCHE_HOST: avalanche:9001
  #     MYSQL_HOST: mysql:3306
  #     POSTGRES_HOST: postgres:5432
  #     REDIS_HOST: redis:6379
  #     DNSMASQ_HOST: dnsmasq:53
  #     MEMCACHED_HOST: memcached:11211
  #     CONSUL_HOST: consul:8500
  #     ELASTICSEARCH_HOST: elasticsearch:9200
  #     KAFKA_HOST: kafka:9093
  #     MONGODB_HOST: mongodb:27017
  #   ports:
  #     - "12345:12345"
